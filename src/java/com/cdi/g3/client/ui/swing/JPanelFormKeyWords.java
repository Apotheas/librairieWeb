/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.cdi.g3.client.ui.swing;

import com.cdi.g3.common.exception.CheckException;
import com.cdi.g3.common.exception.CreateException;
import com.cdi.g3.common.exception.DuplicateKeyException;
import com.cdi.g3.common.exception.FinderException;
import com.cdi.g3.common.exception.ObjectNotFoundException;
import com.cdi.g3.common.exception.RemoveException;
import com.cdi.g3.common.exception.UpdateException;
import com.cdi.g3.server.domain.catalog.Author;
import com.cdi.g3.server.domain.catalog.Book;
import com.cdi.g3.server.domain.catalog.Editor;
import com.cdi.g3.server.domain.other.KeyWord;
import com.cdi.g3.server.domain.other.KeyWordDAO;
import com.cdi.g3.server.service.catalog.CatalogService;
import com.cdi.g3.server.service.other.OtherService;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class JPanelFormKeyWords extends javax.swing.JPanel {

    DefaultTableModel tabModel = new DefaultTableModel();
    Vector keywordList = new Vector();
    OtherService otherService = new OtherService();
    KeyWord keyWord = new KeyWord();
    Book book = new Book();
    KeyWordDAO _daokeywordBook = new KeyWordDAO();
    CatalogService catalogueService = new CatalogService();

    /**
     * Creates new form JPanelFormKeyWords
     */
    public JPanelFormKeyWords() {
        initComponents();

        tabModel.addColumn("ISBN");
        tabModel.addColumn("TITLE");
        tabModel.addColumn("STOCK");
        tabModel.addColumn("COST");

        jTable_KeyWord.setModel(tabModel);

        // SET MODEL INIT KEYWORD MODEL 
        jComboBoxSelectedKeyWord.setModel(initKeywordsModel());
    }

    private void clearTab() {
        int lignes = tabModel.getRowCount();
        for (int i = lignes - 1; i >= 0; i--) {
            tabModel.removeRow(i);
        }

    }

    private void clearField() {
        jTextF_KeyWord.setText(" ");

    }

// INIT KEYWORD MODEL 
    private DefaultComboBoxModel initKeywordsModel() {
        return new DefaultComboBoxModel(initKeywordsVector());
    }

    // INIT KEYWORD MODEL    
    private Vector initKeywordsVector() {

        Collection v = null;
        try {
            v = otherService.findKeyWord();
        } catch (FinderException ex) {
            Logger.getLogger(JPanelFormKeyWords.class.getName()).log(Level.SEVERE, null, ex);
        }
        keywordList.addAll(v);

        return keywordList;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelKeyWords = new javax.swing.JPanel();
        jPanelNewEvent = new javax.swing.JPanel();
        jLabelKeyWord = new javax.swing.JLabel();
        jTextF_KeyWord = new javax.swing.JTextField();
        jButtonCreate = new javax.swing.JButton();
        jButtonSearch = new javax.swing.JButton();
        jButton_Clear = new javax.swing.JButton();
        jPanelManageEvents = new javax.swing.JPanel();
        jScrollPaneManageEvents = new javax.swing.JScrollPane();
        jTable_KeyWord = new javax.swing.JTable();
        jLabelSelectedKeyWord = new javax.swing.JLabel();
        jComboBoxSelectedKeyWord = new javax.swing.JComboBox<String>();
        jLabelInsert = new javax.swing.JLabel();
        jTextInsert = new javax.swing.JTextField();
        jButtonAdd = new javax.swing.JButton();
        jButtonDeleteInsert = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jButton_Update = new javax.swing.JButton();

        jPanelNewEvent.setBorder(javax.swing.BorderFactory.createTitledBorder("New"));

        jLabelKeyWord.setText("Key word   :");

        jButtonCreate.setText("Create");
        jButtonCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateActionPerformed(evt);
            }
        });

        jButtonSearch.setText("Search");
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        jButton_Clear.setText("Clear");
        jButton_Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelNewEventLayout = new javax.swing.GroupLayout(jPanelNewEvent);
        jPanelNewEvent.setLayout(jPanelNewEventLayout);
        jPanelNewEventLayout.setHorizontalGroup(
            jPanelNewEventLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelNewEventLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabelKeyWord)
                .addGap(18, 18, 18)
                .addComponent(jTextF_KeyWord, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonCreate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(jButtonSearch)
                .addGap(28, 28, 28)
                .addComponent(jButton_Clear)
                .addContainerGap())
        );
        jPanelNewEventLayout.setVerticalGroup(
            jPanelNewEventLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelNewEventLayout.createSequentialGroup()
                .addGroup(jPanelNewEventLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelKeyWord)
                    .addComponent(jTextF_KeyWord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCreate)
                    .addComponent(jButtonSearch)
                    .addComponent(jButton_Clear))
                .addGap(0, 15, Short.MAX_VALUE))
        );

        jPanelManageEvents.setBorder(javax.swing.BorderFactory.createTitledBorder("Manage"));

        jTable_KeyWord.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ISBN", "Title", "Author", "Publisher", "Stock"
            }
        ));
        jScrollPaneManageEvents.setViewportView(jTable_KeyWord);

        jLabelSelectedKeyWord.setText("Selected KeyWord  :");

        jComboBoxSelectedKeyWord.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Collector", "Item 2", "Item 3", "Item 4" }));
        jComboBoxSelectedKeyWord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSelectedKeyWordActionPerformed(evt);
            }
        });

        jLabelInsert.setText(" Num  ISBN Book  :");

        jButtonAdd.setText("Add");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jButtonDeleteInsert.setText("Remove");
        jButtonDeleteInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteInsertActionPerformed(evt);
            }
        });

        jButtonDelete.setText("Delete Keyword ");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jButton_Update.setText("Update Keyword");
        jButton_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_UpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelManageEventsLayout = new javax.swing.GroupLayout(jPanelManageEvents);
        jPanelManageEvents.setLayout(jPanelManageEventsLayout);
        jPanelManageEventsLayout.setHorizontalGroup(
            jPanelManageEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelManageEventsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelSelectedKeyWord)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelManageEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanelManageEventsLayout.createSequentialGroup()
                        .addComponent(jButtonDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_Update))
                    .addComponent(jComboBoxSelectedKeyWord, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelInsert)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelManageEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanelManageEventsLayout.createSequentialGroup()
                        .addComponent(jButtonAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonDeleteInsert))
                    .addComponent(jTextInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelManageEventsLayout.createSequentialGroup()
                .addComponent(jScrollPaneManageEvents, javax.swing.GroupLayout.DEFAULT_SIZE, 946, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelManageEventsLayout.setVerticalGroup(
            jPanelManageEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelManageEventsLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanelManageEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelSelectedKeyWord)
                    .addComponent(jComboBoxSelectedKeyWord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelInsert)
                    .addComponent(jTextInsert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanelManageEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelManageEventsLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanelManageEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonDelete)
                            .addComponent(jButton_Update)))
                    .addGroup(jPanelManageEventsLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelManageEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonAdd)
                            .addComponent(jButtonDeleteInsert))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPaneManageEvents, javax.swing.GroupLayout.DEFAULT_SIZE, 561, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanelKeyWordsLayout = new javax.swing.GroupLayout(jPanelKeyWords);
        jPanelKeyWords.setLayout(jPanelKeyWordsLayout);
        jPanelKeyWordsLayout.setHorizontalGroup(
            jPanelKeyWordsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelKeyWordsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelKeyWordsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelKeyWordsLayout.createSequentialGroup()
                        .addComponent(jPanelNewEvent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelKeyWordsLayout.createSequentialGroup()
                        .addComponent(jPanelManageEvents, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(14, 14, 14))))
        );
        jPanelKeyWordsLayout.setVerticalGroup(
            jPanelKeyWordsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelKeyWordsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelNewEvent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanelManageEvents, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelKeyWords, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelKeyWords, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 5, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateActionPerformed

        try {
            // ajouter un test pour verifier le keyword s'il existe ou pas et
            //afficher un meswage d'erreur

            KeyWord keyword = otherService.findKeyWord(jTextF_KeyWord.getText());
            JOptionPane.showMessageDialog(this, "key word already exist");
        } catch (FinderException | CheckException ex) {
            int retour = JOptionPane.showConfirmDialog(this,
                    "KEYWORD NOT IN DATABASE, DO YOU WANT TO CREATE IT ? ",
                    "New KeyWord",
                    JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
            if (retour == JOptionPane.YES_OPTION) {
                
                try {
                    // TODO add your handling code here:

                    keyWord.setNameKeyWord(jTextF_KeyWord.getText());

                    otherService.createKeyWord(keyWord);
                    JOptionPane.showMessageDialog(this, "key word created with success ");
                } catch (CreateException | CheckException ex2) {
                    JOptionPane.showMessageDialog(this, "CreateException | CheckException ");
                }
            }
        }


    }//GEN-LAST:event_jButtonCreateActionPerformed

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
// RAJOUTER UNE CONDITION POUR PAS AJOUTER LE MEME KEYWORD 
        clearTab();

// ajouter un test pour verifier le keyword s'il existe ou pas et 
        //afficher un meswage d'erreur   
        try {
            Vector v = null;
            for (Iterator itarator = otherService.findBooksByKeyword("NAMEKEYWORD", jTextF_KeyWord.getText()).iterator(); itarator.hasNext();) {
                Book book = (Book) itarator.next();
                v = new Vector();
                v.add(book.getNumISBNBook());
                v.add(book.getTitleBook());
                v.add(book.getStockBook());
                v.add(book.getUnitCostBook() + " €");
                tabModel.addRow(v);

            }

        } catch (ObjectNotFoundException ex) {

            JOptionPane.showMessageDialog(this, "No Books or   for this KeyWord on Database");
        }

    }//GEN-LAST:event_jButtonSearchActionPerformed

    private void jComboBoxSelectedKeyWordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSelectedKeyWordActionPerformed
        // TODO add your handling code here:
        clearTab();
        KeyWord myKeyword = ((KeyWord) jComboBoxSelectedKeyWord.getSelectedItem());
        jTextF_KeyWord.setText(myKeyword.getNameKeyWord());
        jButtonSearch.doClick();

    }//GEN-LAST:event_jComboBoxSelectedKeyWordActionPerformed

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        // TODO add your handling code here:

        // il faut redefninir la methode dans sevice  ET AJOUTER UNE CONDITION 
        //  if (!book.getNumISBNBook().equals(jTextInsert.getText())) {
        try {

            //         catalogueService.FindBookByChamp(book.getNumISBNBook(),jTextF_KeyWord.getText());
            _daokeywordBook.associateBookKeyWord(jTextInsert.getText(), jTextF_KeyWord.getText());
            JOptionPane.showMessageDialog(this, "ISBN BOOK IS ADDED WITH SUCCESS ");

        } catch (DuplicateKeyException ex) {
            Logger.getLogger(JPanelFormKeyWords.class.getName()).log(Level.SEVERE, null, ex);
            // JOptionPane.showMessageDialog(this, " Must create book only ");
            //       } catch (ObjectNotFoundException ex) {
            //          Logger.getLogger(JPanelFormKeyWords.class.getName()).log(Level.SEVERE, null, ex);
        }

        //   } else {
        //        JOptionPane.showMessageDialog(this, " YOU CAN'T ASSOCIARTE THIS ISBN BECAUSE IT'S ALRADY ASSOCIATE WITH A BOOK ");
        //    }
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButton_ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ClearActionPerformed
        // TODO add your handling code here: 
        clearField();
        clearTab();

    }//GEN-LAST:event_jButton_ClearActionPerformed

    private void jButton_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_UpdateActionPerformed
        KeyWord keyword = (KeyWord)jComboBoxSelectedKeyWord.getSelectedItem();
        try {
             keyword = otherService.findKeyWord(keyword.getNameKeyWord());
        } catch (FinderException | CheckException ex) {
            Logger.getLogger(JPanelFormKeyWords.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {         

            int retour = JOptionPane.showConfirmDialog(this,
                    "Etes-Vous Sure de vouloir modifier le KeyWord ? ",
                    "Update",
                    JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if (retour == JOptionPane.CLOSED_OPTION || retour == JOptionPane.NO_OPTION) {
                clearTab();
                clearField();
                keyword.setNameKeyWord(jTextF_KeyWord.getText());
            } else {
                otherService.updateKeyWord(keyword);
                try {
                    _daokeywordBook.updateKeyWordIntoKeyWordBook(jTextInsert.getText(), jTextF_KeyWord.getText());
                } catch (DuplicateKeyException ex) {
                    Logger.getLogger(JPanelFormKeyWords.class.getName()).log(Level.SEVERE, null, ex);
                }

                JOptionPane.showMessageDialog(this, " Update Successfull !");
                clearTab();
                clearField();
            }
        } catch (UpdateException ex) {
            JOptionPane.showMessageDialog(this, " Error updating KeyWord !");
        } catch (CheckException ex) {
            JOptionPane.showMessageDialog(this, " KeyWord didnt pass check control !");
        }

    }//GEN-LAST:event_jButton_UpdateActionPerformed

    private void jButtonDeleteInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteInsertActionPerformed
        // TODO add your handling code here:

      //  otherService.deleteKeyWordKB(keyWord.getNameKeyWord())   ;

    }//GEN-LAST:event_jButtonDeleteInsertActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        try {
            // TODO add your handling code here: 
            otherService.deleteKeyWord(jTextF_KeyWord.getText());
            JOptionPane.showMessageDialog(this, "Keyword Deleted with success ");

            KeyWord myKeyword = ((KeyWord) jComboBoxSelectedKeyWord.getSelectedItem());

        } catch (RemoveException ex) {
            Logger.getLogger(JPanelFormKeyWords.class.getName()).log(Level.SEVERE, null, ex);

        } catch (CheckException ex) {
            Logger.getLogger(JPanelFormKeyWords.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButtonDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonCreate;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonDeleteInsert;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JButton jButton_Clear;
    private javax.swing.JButton jButton_Update;
    private javax.swing.JComboBox<String> jComboBoxSelectedKeyWord;
    private javax.swing.JLabel jLabelInsert;
    private javax.swing.JLabel jLabelKeyWord;
    private javax.swing.JLabel jLabelSelectedKeyWord;
    private javax.swing.JPanel jPanelKeyWords;
    private javax.swing.JPanel jPanelManageEvents;
    private javax.swing.JPanel jPanelNewEvent;
    private javax.swing.JScrollPane jScrollPaneManageEvents;
    private javax.swing.JTable jTable_KeyWord;
    private javax.swing.JTextField jTextF_KeyWord;
    private javax.swing.JTextField jTextInsert;
    // End of variables declaration//GEN-END:variables
}
